import re
import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.filters import Command
from app.config import BOT_TOKEN, DB_URL
from app.database import Database
from app.filters import IsAdmin

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
db = Database(DB_URL)

# –î–æ–±–∞–≤–∏–º –≤ ADMIN_COMMANDS –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
ADMIN_COMMANDS = """
üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:

–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –û—á–∫–æ–≤ –ö–ª—É–±–∞ –Ω–∞ [—á–∏—Å–ª–æ] @username - –ò–∑–º–µ–Ω–∏—Ç—å –æ—á–∫–∏ –∫–ª—É–±–∞
–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ö—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ [—á–∏—Å–ª–æ] @username - –ò–∑–º–µ–Ω–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
–î–æ–±–∞–≤–∏—Ç—å –û—á–∫–∏ –ö–ª—É–±–∞ [—á–∏—Å–ª–æ] @username - –î–æ–±–∞–≤–∏—Ç—å –æ—á–∫–∏ –∫–ª—É–±–∞
–£–±—Ä–∞—Ç—å –û—á–∫–∏ –ö–ª—É–±–∞ [—á–∏—Å–ª–æ] @username - –£–±—Ä–∞—Ç—å –æ—á–∫–∏ –∫–ª—É–±–∞
–î–æ–±–∞–≤–∏—Ç—å –ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ [—á–∏—Å–ª–æ] @username - –î–æ–±–∞–≤–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
–£–±—Ä–∞—Ç—å –ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ [—á–∏—Å–ª–æ] @username - –£–±—Ä–∞—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @username - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/–±–∞–Ω–∫_—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

üí° –ü—Ä–∏–º–µ—Ä—ã:
–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –û—á–∫–æ–≤ –ö–ª—É–±–∞ –Ω–∞ 100.5 @ivanov
–î–æ–±–∞–≤–∏—Ç—å –û—á–∫–∏ –ö–ª—É–±–∞ 50 @petrov
–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @noname
"""

USER_COMMANDS = """
ü§ñ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –±–æ—Ç - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:

üìã –î–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
!–ë–∞–Ω–∫ - –ü–æ–∫–∞–∑–∞—Ç—å –ª–∏—á–Ω—ã–π —Å—á–µ—Ç

üí° –ü—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç
"""


@dp.message(IsAdmin(), F.text.startswith("/start"))
async def start_handler(message: Message):
    response = USER_COMMANDS + "\n\n" + ADMIN_COMMANDS
    await message.answer(response)

@dp.message(F.text.startswith("/start"))
async def start_handler(message: Message):
    response = USER_COMMANDS
    await message.answer(response)
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message(IsAdmin(), F.text.startswith("–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"))
async def delete_user_cmd(message: Message):
    pattern = r"–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @(\w+)"
    match = re.search(pattern, message.text)
    
    if not match:
        await message.reply("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @username")
        return
    
    username = match.group(1)
    user = await db.get_user_by_username(username)
    
    if not user:
        await message.reply(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    await db.delete_user(user['tg_id'])
    await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} —É–¥–∞–ª–µ–Ω")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–±–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
@dp.message(IsAdmin(), F.text.startswith("–î–æ–±–∞–≤–∏—Ç—å –û—á–∫–∏ –ö–ª—É–±–∞"))
async def add_club_points(message: Message):
    await adjust_points(message, "club_points", 1)

@dp.message(IsAdmin(), F.text.startswith("–£–±—Ä–∞—Ç—å –û—á–∫–∏ –ö–ª—É–±–∞"))
async def remove_club_points(message: Message):
    await adjust_points(message, "club_points", -1)

@dp.message(IsAdmin(), F.text.startswith("–î–æ–±–∞–≤–∏—Ç—å –ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥"))
async def add_credit_rating(message: Message):
    await adjust_points(message, "credit_rating", 1)

@dp.message(IsAdmin(), F.text.startswith("–£–±—Ä–∞—Ç—å –ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥"))
async def remove_credit_rating(message: Message):
    await adjust_points(message, "credit_rating", -1)

# –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
async def adjust_points(message: Message, field: str, multiplier: int):
    pattern = rf"(–î–æ–±–∞–≤–∏—Ç—å|–£–±—Ä–∞—Ç—å) {'–û—á–∫–∏ –ö–ª—É–±–∞' if '–û—á–∫–∏' in message.text else '–ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥'}\s+([-+]?\d*\.?\d+)\s+@(\w+)"
    match = re.search(pattern, message.text)
    
    if not match:
        await message.reply(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: {'–î–æ–±–∞–≤–∏—Ç—å' if multiplier > 0 else '–£–±—Ä–∞—Ç—å'} {'–û—á–∫–∏ –ö–ª—É–±–∞' if field == 'club_points' else '–ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥'} 50 @username")
        return
    
    points = float(match.group(2)) * multiplier
    username = match.group(3)
    
    user = await db.get_user_by_username(username)
    if not user:
        await message.reply(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    current_value = user.get(field, 0)
    new_value = current_value + points
    
    if field == 'club_points':
        await db.update_club_points(user['tg_id'], new_value)
    else:
        await db.update_credit_rating(user['tg_id'], new_value)
    
    await message.reply(f"‚úÖ {'–î–æ–±–∞–≤–ª–µ–Ω–æ' if multiplier > 0 else '–£–±—Ä–∞–Ω–æ'} {abs(points):.2f} {'–æ—á–∫–æ–≤ –∫–ª—É–±–∞' if field == 'club_points' else '–∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞'} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{username}. –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {new_value:.2f}")
    

@dp.message(F.text.startswith("!"))
async def show_bank(message: Message):
    if not message.text.lower() in ['! –±–∞–Ω–∫', '!–±–∞–Ω–∫']:
        return
    
    user_id = message.from_user.id
    username = message.from_user.username or f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (ID: {user_id})"
    
    await db.create_user(user_id, message.from_user.username or "")
    user = await db.get_user(user_id)
    
    club_points = user.get('club_points', 0)
    credit_rating = user.get('credit_rating', 0)
    
    response = (
        f"üè¶ –õ–∏—á–Ω—ã–π —Å—á—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}\n\n"
        f"ü™ô –°—á—ë—Ç –û—á–∫–æ–≤ –ö–ª—É–±–∞: {club_points:.2f}\n"
        f"üíπ –ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥: {credit_rating:.2f}"
    )
    
    await message.reply(response)

@dp.message(IsAdmin(), F.text.startswith("–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –û—á–∫–æ–≤ –ö–ª—É–±–∞ –Ω–∞"))
async def update_club_points(message: Message):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {message.text}")
    
    # –ë–æ–ª–µ–µ –≥–∏–±–∫–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
    pattern = r"–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –û—á–∫–æ–≤ –ö–ª—É–±–∞ –Ω–∞\s+([-+]?\d*\.?\d+)\s+@(\w+)"
    match = re.search(pattern, message.text)
    
    if not match:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: {message.text}")
        await message.reply("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –û—á–∫–æ–≤ –ö–ª—É–±–∞ –Ω–∞ 100.5 @username")
        return
    
    points = float(match.group(1))
    username = match.group(2)
    logger.info(f"–†–∞—Å–ø–∞—Ä—à–µ–Ω–æ: points={points}, username={username}")
    
    user = await db.get_user_by_username(username)
    if not user:
        logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        await message.reply(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    await db.update_club_points(user['tg_id'], points)
    logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω—ã –æ—á–∫–∏ –∫–ª—É–±–∞ –¥–ª—è @{username}: {points}")
    await message.reply(f"‚úÖ –ë–∞–ª–∞–Ω—Å –û—á–∫–æ–≤ –ö–ª—É–±–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {points:.2f}")

@dp.message(IsAdmin(), F.text.startswith("–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ö—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞"))
async def update_credit_rating(message: Message):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {message.text}")
    
    # –ë–æ–ª–µ–µ –≥–∏–±–∫–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
    pattern = r"–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ö—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞\s+([-+]?\d*\.?\d+)\s+@(\w+)"
    match = re.search(pattern, message.text)
    
    if not match:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: {message.text}")
        await message.reply("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ö—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ 50.25 @username")
        return
    
    rating = float(match.group(1))
    username = match.group(2)
    logger.info(f"–†–∞—Å–ø–∞—Ä—à–µ–Ω–æ: rating={rating}, username={username}")
    
    user = await db.get_user_by_username(username)
    if not user:
        logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        await message.reply(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    await db.update_credit_rating(user['tg_id'], rating)
    logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –¥–ª—è @{username}: {rating}")
    await message.reply(f"‚úÖ –ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {rating:.2f}")

@dp.message(IsAdmin(), Command("–±–∞–Ω–∫_—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
async def show_bank_stats(message: Message):
    users = await db.get_all_users()
    
    response = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–Ω–∫–∞:\n\n"
    for user in users:
        username_display = f"@{user['username']}" if user.get('username') else f"ID: {user['tg_id']}"
        club_points = user.get('club_points', 0)
        credit_rating = user.get('credit_rating', 0)
        response += f"üë§ {username_display}: ü™ô {club_points:.2f} | üíπ {credit_rating:.2f}\n"
    
    await message.reply(response)

async def main():
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    await db.connect()
    await db.create_table()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())